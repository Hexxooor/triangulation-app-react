# ðŸš€ Render.com optimiertes Frontend Dockerfile
# Speziell fÃ¼r Render.com's Container-Platform optimiert

FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Copy source
COPY . .

# Build for production
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
RUN npm run build

# Production stage optimiert fÃ¼r Render.com
FROM node:18-alpine

RUN npm install -g serve

WORKDIR /app

# Copy built app
COPY --from=build /app/build ./build

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:$PORT/health || exit 1

# Render.com verwendet die $PORT Environment Variable
EXPOSE $PORT

CMD ["sh", "-c", "serve -s build -l $PORT"]