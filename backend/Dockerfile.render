# ðŸš€ Render.com optimiertes Backend Dockerfile
# Python Flask API optimiert fÃ¼r Render.com

FROM python:3.11-slim

WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies including gunicorn
RUN pip install --no-cache-dir -r requirements.txt gunicorn

# Copy application code
COPY . .

# Create non-root user
RUN useradd -m -u 1001 appuser && chown -R appuser:appuser /app
USER appuser

# Health check for Render.com
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD python -c "import requests; requests.get(f'http://localhost:{os.environ.get(\"PORT\", 5000)}/api/health', timeout=5)" || exit 1

# Render.com verwendet die $PORT Environment Variable
EXPOSE $PORT

# Gunicorn fÃ¼r Production
CMD gunicorn --bind 0.0.0.0:$PORT --workers 2 --timeout 60 app:app